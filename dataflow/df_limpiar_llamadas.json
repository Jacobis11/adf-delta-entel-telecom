{
	"name": "df_limpiar_llamadas",
	"properties": {
		"folder": {
			"name": "SILVER"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_llamadas_entel",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_silver_llamadas_entel",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "cast1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "cast2"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "cast3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SERVICIO as string,",
				"          REGISTRO as string,",
				"          NUMERO_A as string,",
				"          IMEI_A as string,",
				"          RBS_UTILIZADA_A as string,",
				"          CELDA_A as string,",
				"          LATITUD_LONGITUD_A as string,",
				"          NUMERO_B as string,",
				"          IMEI_B as string,",
				"          RBS_UTILIZADA_B as string,",
				"          CELDA_B as string,",
				"          LATITUD_LONGITUD_B as string,",
				"          FECHA as string,",
				"          DURACION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 cast(output(",
				"          FECHA as timestamp 'MM-dd-yyyy HH:mm:ss'",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 derive(DURACION = replace(DURACION,'-', '00:00:00'),",
				"          LATITUD_LONGITUD_A = iif(LATITUD_LONGITUD_A == \"-\",'-0.0,-0.0',LATITUD_LONGITUD_A),",
				"          LATITUD_LONGITUD_B = iif(LATITUD_LONGITUD_B == \"-\",'-0.0,-0.0',LATITUD_LONGITUD_B)) ~> derivedColumn1",
				"derivedColumn1 cast(output(",
				"          DURACION as timestamp 'HH:mm:ss'",
				"     ),",
				"     errors: true) ~> cast2",
				"cast2 derive(Latitud_a = substring(LATITUD_LONGITUD_A, 0, instr(LATITUD_LONGITUD_A, \",-\")-1),",
				"          Longitud_a = substring(LATITUD_LONGITUD_A,instr(LATITUD_LONGITUD_A, \",-\")+1,length(LATITUD_LONGITUD_A))\r",
				"\r",
				") ~> derivedColumn2",
				"derivedColumn2 derive(Latitud_b = substring(LATITUD_LONGITUD_B, 0, instr(LATITUD_LONGITUD_B, \",-\")-1),",
				"          Longitud_b = substring(LATITUD_LONGITUD_B,instr(LATITUD_LONGITUD_B, \",-\")+1,length(LATITUD_LONGITUD_B))) ~> derivedColumn3",
				"derivedColumn3 cast(output(",
				"          Latitud_a as decimal(10,7),",
				"          Longitud_a as decimal(10,7),",
				"          Latitud_b as decimal(10,7),",
				"          Longitud_b as decimal(10,7)",
				"     ),",
				"     errors: true) ~> cast3",
				"cast3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SERVICIO as string,",
				"          REGISTRO as string,",
				"          NUMERO_A as string,",
				"          IMEI_A as string,",
				"          RBS_UTILIZADA_A as string,",
				"          CELDA_A as string,",
				"          LATITUD_LONGITUD_A as string,",
				"          NUMERO_B as string,",
				"          IMEI_B as string,",
				"          RBS_UTILIZADA_B as string,",
				"          CELDA_B as string,",
				"          LATITUD_LONGITUD_B as string,",
				"          FECHA as date,",
				"          DURACION as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SERVICIO,",
				"          REGISTRO,",
				"          NUMERO_A,",
				"          IMEI_A,",
				"          RBS_UTILIZADA_A,",
				"          CELDA_A,",
				"          LATITUD_LONGITUD_A = Latitud_b,",
				"          NUMERO_B,",
				"          IMEI_B,",
				"          RBS_UTILIZADA_B,",
				"          CELDA_B,",
				"          LATITUD_LONGITUD_B,",
				"          FECHA,",
				"          {} = SERVICIO",
				"     )) ~> sink1"
			]
		}
	}
}