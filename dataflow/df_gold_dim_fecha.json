{
	"name": "df_gold_dim_fecha",
	"properties": {
		"folder": {
			"name": "GOLD"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_silver_llamadas_entel",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_dim_fecha",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          fecha as date,",
				"          {a単o} as integer,",
				"          mes as integer,",
				"          mes_texto as string,",
				"          dia_texto as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT DISTINCT\\r\\n  FECHA                                  AS fecha,\\r\\n  YEAR(FECHA)                            AS a単o,\\r\\n  MONTH(FECHA)                           AS mes,\\r\\n  DATENAME(MONTH, FECHA)                 AS mes_texto,\\r\\n  DATENAME(WEEKDAY, FECHA)               AS dia_texto\\r\\nFROM SILVER.LLAMADA\\r\\nWHERE FECHA IS NOT NULL\\r\\n',",
				"     format: 'query') ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id_fecha as integer,",
				"          fecha as date,",
				"          {a単o} as integer,",
				"          mes as integer,",
				"          mes_texto as string,",
				"          dia_texto as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          fecha,",
				"          {a単o},",
				"          mes,",
				"          mes_texto,",
				"          dia_texto",
				"     )) ~> sink1"
			]
		}
	}
}