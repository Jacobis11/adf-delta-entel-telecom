{
	"name": "df_limpiar_datos",
	"properties": {
		"folder": {
			"name": "SILVER"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_llamadas_entel",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "cast1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SERVICIO as string,",
				"          REGISTRO as string,",
				"          NUMERO_A as string,",
				"          IMEI_A as string,",
				"          RBS_UTILIZADA_A as string,",
				"          CELDA_A as string,",
				"          LATITUD_LONGITUD_A as string,",
				"          NUMERO_B as string,",
				"          IMEI_B as string,",
				"          RBS_UTILIZADA_B as string,",
				"          CELDA_B as string,",
				"          LATITUD_LONGITUD_B as string,",
				"          FECHA as string,",
				"          DURACION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 derive(SERVICIO = trim(SERVICIO),",
				"          REGISTRO = trim(REGISTRO),",
				"          NUMERO_A = trim(NUMERO_A),",
				"          IMEI_A = trim(IMEI_A),",
				"          RBS_UTILIZADA_A = trim(RBS_UTILIZADA_A),",
				"          CELDA_A = trim(CELDA_A),",
				"          LATITUD_LONGITUD_A = trim(LATITUD_LONGITUD_A),",
				"          NUMERO_B = trim(NUMERO_B),",
				"          IMEI_B = trim(IMEI_B),",
				"          RBS_UTILIZADA_B = trim(RBS_UTILIZADA_B),",
				"          CELDA_B = trim(CELDA_B),",
				"          LATITUD_LONGITUD_B = trim(LATITUD_LONGITUD_B),",
				"          FECHA = trim(FECHA),",
				"          DURACION = trim(DURACION)) ~> derivedColumn1",
				"derivedColumn1 filter(!isNull(NUMERO_A) && NUMERO_A != '-' &&\r",
				"!isNull(NUMERO_B) && NUMERO_B != '-' &&\r",
				"!isNull(FECHA) && FECHA != '-'\r",
				") ~> filter1",
				"derivedColumn2 cast(output(",
				"          FECHA as date 'dd-MM-yyyy HH:mm:ss',",
				"          DURACION as timestamp 'HH:mm:ss'",
				"     ),",
				"     errors: true) ~> cast1",
				"filter1 derive(FECHA = iif(isNull(FECHA) || FECHA == '' || FECHA == '-', '01-01-1900 00:00:00', FECHA)\r",
				",",
				"          DURACION = iif(isNull(DURACION) || DURACION == '' || DURACION == '-', '00:00:00', DURACION)\r",
				") ~> derivedColumn2"
			]
		}
	}
}